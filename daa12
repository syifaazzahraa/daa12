DAA12.ipynb
DAA12.ipynb_
[ ]
pip install networkx
Requirement already satisfied: networkx in /usr/local/lib/python3.7/dist-packages (2.6.3)
[ ]
import networkx as nx
import matplotlib.pyplot as plt
vertices = range(1,10)
edges = [(7,2), (2,3), (7,4), (4,5), (7,3), (7,5), (1,6), (1,7), (2,8), (2,9)]
G = nx.Graph()
G.add_nodes_from(vertices)
G.add_edges_from(edges)
nx.draw(G, with_labels=True,node_color='y',node_size=800)

[ ]
nx.degree_centrality(G)
{1: 0.25,
 2: 0.5,
 3: 0.25,
 4: 0.25,
 5: 0.25,
 6: 0.125,
 7: 0.625,
 8: 0.125,
 9: 0.125}
[ ]
nx.betweenness_centrality(G)
{1: 0.25,
 2: 0.46428571428571425,
 3: 0.0,
 4: 0.0,
 5: 0.0,
 6: 0.0,
 7: 0.7142857142857142,
 8: 0.0,
 9: 0.0}
[ ]
nx.closeness_centrality(G)
{1: 0.5,
 2: 0.6153846153846154,
 3: 0.5333333333333333,
 4: 0.47058823529411764,
 5: 0.47058823529411764,
 6: 0.34782608695652173,
 7: 0.7272727272727273,
 8: 0.4,
 9: 0.4}
[ ]
centrality = nx.eigenvector_centrality(G)
sorted((v, '{:0.2f}'.format(c)) for v, c in centrality.items())
[(1, '0.24'),
 (2, '0.45'),
 (3, '0.36'),
 (4, '0.32'),
 (5, '0.32'),
 (6, '0.08'),
 (7, '0.59'),
 (8, '0.16'),
 (9, '0.16')]
[ ]
import networkx as nx
import matplotlib.pyplot as plt
vertices = range(1,10)
edges = [(1,2), (1,3), (1,4), (1,5), (1,6), (1,7), (2,4), (2,6), (2,3), (5,4),
         (5,7), (5,3), (6,3), (4,7), (3,8), (5,8), (8,9), (9,0)]
G = nx.Graph()
G.add_nodes_from(vertices)
G.add_edges_from(edges)
nx.draw(G, with_labels=True,node_color='y',node_size=800)

[ ]
nx.degree_centrality(G)
{0: 0.1111111111111111,
 1: 0.6666666666666666,
 2: 0.4444444444444444,
 3: 0.5555555555555556,
 4: 0.4444444444444444,
 5: 0.5555555555555556,
 6: 0.3333333333333333,
 7: 0.3333333333333333,
 8: 0.3333333333333333,
 9: 0.2222222222222222}
[ ]
import networkx as nx
import matplotlib.pyplot as plt
vertices = range(1,10)
edges = [(1,4), (1,10), (2,1), (2,3), (2,6), (2,11), (2,12), (2,15), (3,5), (3,13),(6,7), (6,8), (6,9), (6,14)]
G = nx.Graph()
G.add_nodes_from(vertices)
G.add_edges_from(edges)
nx.draw(G, with_labels=True,node_color='y',node_size=800)

[ ]
nx.degree_centrality(G)
{1: 0.21428571428571427,
 2: 0.42857142857142855,
 3: 0.21428571428571427,
 4: 0.07142857142857142,
 5: 0.07142857142857142,
 6: 0.3571428571428571,
 7: 0.07142857142857142,
 8: 0.07142857142857142,
 9: 0.07142857142857142,
 10: 0.07142857142857142,
 11: 0.07142857142857142,
 12: 0.07142857142857142,
 13: 0.07142857142857142,
 14: 0.07142857142857142,
 15: 0.07142857142857142}
